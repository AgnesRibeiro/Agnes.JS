const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

const gridSize = 20;
const canvasSize = 400;
canvas.width = canvasSize;
canvas.height = canvasSize;

let snake = [{ x: 160, y: 160 }];
let direction = { x: gridSize, y: 0 };
let food = { x: 100, y: 100 };
let score = 0;
let gameRunning = false;

const startButton = document.getElementById('startBtn');
startButton.addEventListener('click', startGame);

function startGame() {
    document.getElementById('message').style.display = 'none';
    snake = [{ x: 160, y: 160 }];
    direction = { x: gridSize, y: 0 };
    food = { x: 100, y: 100 };
    score = 0;
    gameRunning = true;
    updateGame();
}

function updateGame() {
    if (!gameRunning) return;

    setTimeout(function() {
        clearCanvas();
        moveSnake();
        checkCollision();
        drawFood();
        drawSnake();
        updateScore();
        updateGame();
    }, 100);
}

function clearCanvas() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
}

function drawSnake() {
    ctx.fillStyle = '#800080';  // Cor roxa
    snake.forEach(segment => {
        ctx.fillRect(segment.x, segment.y, gridSize, gridSize);
    });
}

function moveSnake() {
    const head = { x: snake[0].x + direction.x, y: snake[0].y + direction.y };
    snake.unshift(head);

    if (head.x === food.x && head.y === food.y) {
        score++;
        placeFood();
    } else {
        snake.pop();
    }
}

function checkCollision() {
    const head = snake[0];

    if (
        head.x < 0 || head.x >= canvasSize ||
        head.y < 0 || head.y >= canvasSize ||
        snake.some((segment, index) => index !== 0 && segment.x === head.x && segment.y === head.y)
    ) {
        gameRunning = false;
        alert('Game Over! Pontuação: ' + score);
        document.getElementById('message').style.display = 'block';
    }
}

function drawFood() {
    ctx.fillStyle = '#ff0000';
    ctx.fillRect(food.x, food.y, gridSize, gridSize);
}

function placeFood() {
    food.x = Math.floor(Math.random() * (canvasSize / gridSize)) * gridSize;
    food.y = Math.floor(Math.random() * (canvasSize / gridSize)) * gridSize;
}

function updateScore() {
    document.querySelector('#score').textContent = 'Pontuação: ' + score;
}

document.addEventListener('keydown', function(event) {
    if (event.key === 'ArrowUp' && direction.y === 0) {
        direction = { x: 0, y: -gridSize };
    } else if (event.key === 'ArrowDown' && direction.y === 0) {
        direction = { x: 0, y: gridSize };
    } else if (event.key === 'ArrowLeft' && direction.x === 0) {
        direction = { x: -gridSize, y: 0 };
    } else if (event.key === 'ArrowRight' && direction.x === 0) {
        direction = { x: gridSize, y: 0 };
    }
});
